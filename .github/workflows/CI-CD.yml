name: CI/CD Pipeline for Static Website

# Trigger the workflow only when changes are pushed to the 'src' folder
on:
  push:
    paths:
      - 'src/**'  # This ensures the workflow runs only when there are changes in the `src` folder
    branches:
      - main     # You can change this to the branch you use for production (e.g., 'main', 'master')

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx for advanced Docker features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub (or any registry you are using)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: List files in the directory
        run: ls -al

      # Build the Docker image for the website
      - name: Build Docker image for Static Website
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-static-website:latest -f Dockerfile .

      -name: Verify the Docker image
        run: |
          docker images

      # Push the Docker image to Docker Hub (or any registry you're using)
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-static-website:latest

      # Set up SSH for Ansible deployment
      - name: Set up SSH for Ansible
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Run the Ansible Playbook to deploy the static website
      - name: Run Ansible Playbook for Deployment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          inventory: ansible/inventory
          playbook: ansible/playbook.yml
